buildscript {
	ext {
        springBootVersion = '1.4.0.RELEASE'
        springRestDocsVersion = '1.1.1.RELEASE'
    }

  repositories {
    jcenter()
    mavenCentral()
  }
  dependencies {
    classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
      classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
  }
}
apply plugin: "com.jfrog.artifactory"
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.nexus'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'
group = "com.gruppometa"

jar {
    manifest {
        attributes 'Implementation-Title': 'sbnmarc-iccd',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name "meta.nexus"
        url "http://127.0.0.1:8081/repository/maven-releases/"
    }
}

nexus {
    sign = false
    repositoryUrl = 'http://127.0.0.1:8081/repository/maven-releases/'
    snapshotRepositoryUrl = 'http://127.0.0.1:8081/repository/maven-snapshots/'
}

dependencies {
	compile ("org.springframework.boot:spring-boot-starter-web:1.4.0.RELEASE")
	compile ('org.apache.httpcomponents:httpclient:4.5.1')
	compile ('net.sf.saxon:Saxon-HE:9.7.0-1')
	compile ('org.slf4j:slf4j-api:1.7.7')
	compile ('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.6.4')
	compile ('com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.6.4')
	compile('com.gruppometa:kardex-data:1.0'){
	}
	compile('com.gruppometa:unimarc-transformer2:1.0') {
		exclude group: 'org.slf4j', module: 'slf4j-jcl'
    }
	testCompile ('org.slf4j:slf4j-jcl:1.7.7')
	testCompile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

task printFields  << {
	def xsl = Checkstyle.getClassLoader().getResourceAsStream('printFieldsIccd.xsl')
 	ant.xslt(in: "src/main/resources/sbnmarc2iccd.xsl",
    	  //style: {string(value: xsl.text) },
    	  style: 'src/main/resources/printFieldsIccd.xsl',
          out:   "src/test/resources/printFields.csv"
 	)
 	ant.echo("Hi")
}

configurations {
  published
}
artifactory {
  contextUrl = 'http://127.0.0.1:38081/artifactory'   //The base Artifactory URL if not overridden by the publisher/resolver
  publish {
    contextUrl = 'http://127.0.0.1:38081/artifactory'   //The base Artifactory URL for the publisher
    //A closure defining publishing information
    repository {
      repoKey = 'libs-release-local'   //The Artifactory repository key to publish to
      username ="${artifactory_user}"         //The publisher user name
      password = "${artifactory_password}"       //The publisher password
    }
    defaults {
        publishConfigs('archives', 'published')
        properties {                                                   //Optional closure to attach properties to artifacts based on a list of artifact patterns per project publication
//            mavenJava 'org.jfrog:*:*:*@*', key1: 'val1'                //The property key1=val1 will be set on all artifacts part of the mavenJava publication and with group org.jfrog
//            all 'org.jfrog:shared:1.?:*@*', key2: 'val2', key3: 'val3' //The properties key2 and key3 will be set on all published artifacts (all publications) with group:artifact:version
                                                                       //equal to org.jfrog:shared:1.?
        }
        publishBuildInfo = true   //Publish build-info to Artifactory (true by default)
        publishArtifacts = true   //Publish artifacts to Artifactory (true by default)
        publishPom = true   //Publish generated POM files to Artifactory (true by default).
        publishIvy = false   //Publish generated Ivy descriptor files to Artifactory (true by default).
    }
  }
  resolve {
    contextUrl = 'http://127.0.0.1:38081/artifactory'   //The base Artifactory URL for the resolver
    repository {
      repoKey = 'libs-release-local'  //The Artifactory (preferably virtual) repository key to resolve from
      username = "${artifactory_user}"          //The publisher user name
      password = "${artifactory_password}"       //The publisher password
     maven = true                //Resolve Maven-style artifacts and descriptors (true by default)
    }
  }
  clientConfig.timeout = 600 // Artifactory connection timeout (in seconds). The default timeout is 300 seconds.
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
